"use strict";(self.webpackChunkcommunity_docs=self.webpackChunkcommunity_docs||[]).push([[893],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4447:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Part 4 - LUKSO Network Setup",sidebar_position:4},i="Part 4 - LUKSO Network Setup",s={unversionedId:"node-guide/network-setup",id:"node-guide/network-setup",title:"Part 4 - LUKSO Network Setup",description:"Before you begin",source:"@site/docs/node-guide/4-network-setup.md",sourceDirName:"node-guide",slug:"/node-guide/network-setup",permalink:"/docs/node-guide/network-setup",draft:!1,editUrl:"https://github.com/Luksoverse/community-docs/tree/main/packages/create-docusaurus/templates/shared/docs/node-guide/4-network-setup.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Part 4 - LUKSO Network Setup",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Part 3 - Settings & Security",permalink:"/docs/node-guide/settings-security"},next:{title:"Part 5 - Monitoring",permalink:"/docs/node-guide/monitoring"}},u={},l=[{value:"Before you begin",id:"before-you-begin",level:2},{value:"Mainnet",id:"mainnet",level:2},{value:"Testnet",id:"testnet",level:2},{value:"About",id:"about",level:2},{value:"Nodes",id:"nodes",level:3},{value:"Validators",id:"validators",level:3}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"part-4---lukso-network-setup"},"Part 4 - LUKSO Network Setup"),(0,o.kt)("h2",{id:"before-you-begin"},"Before you begin"),(0,o.kt)("p",null,"Make sure you did prepare your system in step 1, 2 and 3 of this guide first."),(0,o.kt)("h2",{id:"mainnet"},"Mainnet"),(0,o.kt)("p",null,"Coming soon. Wait for the official LUKSO annoucement how to start your mainnet node."),(0,o.kt)("h2",{id:"testnet"},"Testnet"),(0,o.kt)("p",null,"Follow the official LUKSO instructions to setup your Testnet node ",(0,o.kt)("a",{parentName:"p",href:"https://docs.lukso.tech/networks/testnet/parameters/"},"here"),". Proceed to step 5 of this guide after."),(0,o.kt)("h2",{id:"about"},"About"),(0,o.kt)("p",null,"LUKSO uses the same software and architecture of Ethereum and will launch completely transitioned to proof-of-stake. It will resemble a post-merge Ethereum, commonly referred to as Ethereum 2.0 but no longer technically correct as the Ethereum foundation has moved away from that term."),(0,o.kt)("h3",{id:"nodes"},"Nodes"),(0,o.kt)("p",null,"A node is a computer running client software that can establish connections and exchange information with other nodes, forming a peer-to-peer network. A LUKSO node (like Ethereum) is the combination of two pieces of client software. The execution client processes transactions and smart contracts, while the consensus client coordinates the proof-of-stake consensus and runs the beacon chain. Running a node allows for the trustless and private use of the LUKSO network while supporting the network and ecosystem at the same time. Anyone with proper hardware can run a node; it does not require a stake."),(0,o.kt)("h3",{id:"validators"},"Validators"),(0,o.kt)("p",null,"A validator consists of a LUKSO node and a third piece of client software responsible for proposing blocks. A financial stake is required to run a validator. Validators are rewarded for proposing blocks that help the network reach consensus and penalized for actions that hinder consensus, like being offline or acting maliciously."))}d.isMDXComponent=!0}}]);