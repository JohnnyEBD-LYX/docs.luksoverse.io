"use strict";(self.webpackChunkcommunity_docs=self.webpackChunkcommunity_docs||[]).push([[1047],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1394:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,s={unversionedId:"mainnet/complete-node-guide/blockchain-clients/firewall-settings",id:"mainnet/complete-node-guide/blockchain-clients/firewall-settings",title:"firewall-settings",description:"6.6 Firewall Settings",source:"@site/docs/mainnet/complete-node-guide/6-blockchain-clients/06-firewall-settings.md",sourceDirName:"mainnet/complete-node-guide/6-blockchain-clients",slug:"/mainnet/complete-node-guide/blockchain-clients/firewall-settings",permalink:"/docs/mainnet/complete-node-guide/blockchain-clients/firewall-settings",draft:!1,editUrl:"https://github.com/Luksoverse/community-docs/tree/main/packages/create-docusaurus/templates/shared/docs/mainnet/complete-node-guide/6-blockchain-clients/06-firewall-settings.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"network-ports",permalink:"/docs/mainnet/complete-node-guide/blockchain-clients/network-ports"},next:{title:"router-config",permalink:"/docs/mainnet/complete-node-guide/blockchain-clients/router-config"}},l={},c=[{value:"6.6 Firewall Settings",id:"66-firewall-settings",level:2},{value:"6.6.1 Opening the ports on the firewall",id:"661-opening-the-ports-on-the-firewall",level:3},{value:"6.6.2 Checking the configured ports",id:"662-checking-the-configured-ports",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"66-firewall-settings"},"6.6 Firewall Settings"),(0,o.kt)("p",null,"After you have spot out which ports you need to open, we can go back to editing the firewall settings. We can do this the same way as we did before in the ",(0,o.kt)("a",{parentName:"p",href:"/3-system-setup/"},"system setup")," section of this guide."),(0,o.kt)("p",null,"Log in to your node if you are not already connected:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"ssh <ssh-device-alias>\n")),(0,o.kt)("h3",{id:"661-opening-the-ports-on-the-firewall"},"6.6.1 Opening the ports on the firewall"),(0,o.kt)("p",null,"I will go ahead and open all public ports used for the Geth and Prysm clients. Prysm is needed as it is the only fully supported validator for the LUKSO CLI for now. Since I choose stability over performance, I choose Geth, based on the warning notices from Erigon's repository."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# Geth's Execution Chain Data Channel\nsudo ufw allow 30303/tcp\n\n# Geth's Execution Chain Discovery\nsudo ufw allow 30303/udp\n\n# Prysm's Beacon Gossip, Requests, and Responses\nsudo ufw allow 13000/tcp\n\n# Prysm's Beacon Discovery, Requests, Data Exchange\nsudo ufw allow 12000/udp\n")),(0,o.kt)("p",null,"The output of each command should always show:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Rule added\nRule added (v6)\n")),(0,o.kt)("h3",{id:"662-checking-the-configured-ports"},"6.6.2 Checking the configured ports"),(0,o.kt)("p",null,"Now we can verify our firewall configuration as we did previously. If something is missing or configured wrong, have a look into the system setup's ",(0,o.kt)("a",{parentName:"p",href:"/3-system-setup/"},"firewall section")," on how to remove them."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"sudo ufw status\n")),(0,o.kt)("p",null,"The output for Geth and Prysm should look similar to the one underneath. Please note that ",(0,o.kt)("inlineCode",{parentName:"p"},"<prefered-ssh-port>")," will be exchanged with your actual SSH port."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Status: active\n\nTo                               Action      From\n--                               ------      ----\n<prefered-ssh-port>/tcp          ALLOW       Anywhere\n30303/tcp                        ALLOW       Anywhere\n30303/udp                        ALLOW       Anywhere\n13000/tcp                        ALLOW       Anywhere\n12000/udp                        ALLOW       Anywhere\n<prefered-ssh-port>/tcp (v6)     ALLOW       Anywhere (v6)\n30303/tcp (v6)                   ALLOW       Anywhere (v6)\n30303/udp (v6)                   ALLOW       Anywhere (v6)\n13000/tcp (v6)                   ALLOW       Anywhere (v6)\n12000/udp (v6)                   ALLOW       Anywhere (v6)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"If your client ports match, it means they are allowed from the node's point of view. In the next step, we need to enable inputs from the router's side.")))}u.isMDXComponent=!0}}]);